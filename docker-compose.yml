version: "3.3"

services:

  frontend:
    build: 
      context: ./frontend 
    ports:
     - "3000:3000"
    container_name: frontend-con
    # volumes: 
    #   - 'our-vol:/app'
    # networks:
    #   - hackphaistus
    restart: always
    image: run
    stdin_open: true

  backend:
    build:
      context: ./backend
    ports:
     - "5000:5000" 
    container_name: backend-con
    # networks: 
    #  - hackphaistus
    # volumes:
    #  - 'backend:/app'
    image: run
    restart: always
    command: python manage.py runserver 0.0.0.0:8000
    #gunicorn backend.wsgi --bind 0.0.0.0:8000

  rabbitmq:
    image : rabbitmq:3-management
    environment:
     - RABBITMQ_DEFAULT_USER= 
     - RABBITMQ_DEFAULT_PASS=
    ports:
     - "5672:5672"
     - "15672:15672"
    # networks: 
    #  - hackphaistus
    # volumes:
    #   - 'rabbitmq:/app'
  #docker-compose 없이 사용할려면 #이미지설치 : docker pull rabbitmq:3-management
  #컨테이너 실행: docker run -v rabbitmq:/app -d -p 15672:15672 -p 5672:5672 --name  rabbitmq rabbitmq:3-management                                   


  db: # 서비스 명
    image: mysql # 사용할 이미지
    container_name: mysql-con # 컨테이너 이름 설정
    ports:
      - "3306:3306" # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)
    environment: # -e 옵션
      MYSQL_ROOT_PASSWORD: ""  # MYSQL 패스워드 설정 옵션
    command: # 명령어 실행
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    # volumes:
    #   - mysql:/var/lib/docker/volumes/mysql/_data
   
  #   environment:
  #    - MYSQL_DATABASE=app 
  #    - MYSQL_USER= #채우기
  #    - MYSQL_PASSWORD= 
  #    - MYSQL_ROOT_PASSWORD=
  #   command: 



  # networks: # 네트워크 이름
  #   hackphaistus:
  #     driver: bridge
      

  # volumes:
  #   our-vol:
  #   # backend:
  #   rabbitmq:
  #   # mysql:
     
#docker-compose up 

#network
# docker network : hackphaistus
# docker exec frontend-con ping backend-con

#volume
#docker volume prune
# sudo curl -L "https://github.com/docker/compose/releases/download/2.2.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

# docker run -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=password --name mysql-con -v /var/lib/docker/volumes/mysql/_data mysql:latest --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

